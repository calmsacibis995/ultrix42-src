.\" SCCSID: @(#)eqn.1	8.1	9/11/90
.TH eqn 1 "" "" Unsupported
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ps \n(99
.ft \n(98
.EN
.SH Name
eqn, neqn, checkeq \- typeset mathematics
.SH Syntax
.B eqn
[
.BI \-d xy
] [
.BI \-p n
] [
.BI \-s n
] [
.BI \-f n
] 
[ \fIfile\fP ] ...
.br
.B checkeq
[ \fIfile\fP ] ...
.SH Description
.NXR "math symbols"
The 
.PN eqn
command is a
troff(1)
preprocessor
for typesetting mathematics
on a Graphic Systems phototypesetter,
.PN neqn
on terminals.
Usage is almost always
.EX
	eqn file ... | troff

	neqn file ... | nroff
.EE
.if t .ig
.PP
NOTE: Your terminal may not be able to accurately display 
the special math symbols in this and other 
.PN eqn 
related reference pages. See the 
\fIReference Pages for Unsupported Software\fP
for a complete description of the math symbols. 
.PP
If no files are specified, 
these programs
reads from the standard input.
A line beginning with \.EQ marks the start of an equation;
the end of an equation
is marked by a line beginning with \.EN.
Neither of these lines is altered,
so they may be defined in macro packages
to get
centering, numbering, etc.
It is also possible to set two characters as delimiters;
subsequent text between delimiters is also treated as
.PN eqn
input.
Delimiters may be set to characters
.I x
and
.I y
with the command-line argument
.BI \-d xy
or (more commonly) with
`delim
.IR xy '
between .EQ and .EN.
The left and right delimiters may be identical.
Delimiters are turned off by delim off.
All text that is neither between delimiters nor between .EQ and .EN
is passed through untouched.
.PP
The program
.I checkeq
reports missing or unbalanced delimiters and .EQ/.EN pairs.
.PP
Tokens within
.PN eqn
are separated by
spaces, tabs, newlines, braces, double quotes,
tildes or circumflexes.
Braces {} are used for grouping;
generally speaking,
anywhere a single character like
.I x
could appear, a complicated construction
enclosed in braces may be used instead.
Tilde ~ represents a full space in the output,
circumflex ^ half as much.
.PP
.vs 13p
Subscripts and superscripts are produced with the keywords
.B sub
and
.B sup.
Thus
.I "x sub i" 
makes
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "x
.ds 13 "i
.as 12 \v'20u'\*(13\v'-20u'
.ds 12 \x'0'\f1\s10\*(12\|\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ", 
.ps \n(99
.ft \n(98
\*(11
.I "a sub i sup 2"
produces
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "a
.ds 13 "i
.ds 14 "\f12\fP
.nr 13 \w'\s7\*(13'
.nr 14 \w'\s7\*(14'
.nr 15 \n(14
.if \n(13>\n(15 .nr 15 \n(13
.as 12 \v'20u'\*(13\h'-\n(13u'\v'-40u'\
\*(14\h'-\n(14u+\n(15u'\v'20u'
.ds 12 \x'0'\f1\s10\*(12\|\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ",
.ps \n(99
.ft \n(98
\*(11
and
.I "e sup {x sup 2 + y sup 2}"
gives
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "e
.ds 13 "x
.ds 14 "\f12\fP
.as 13 \v'-20u'\*(14\v'20u'
.ds 14 "\(pl
.as 13 "\|\*(14
.ds 14 "y
.ds 15 "\f12\fP
.as 14 \v'-20u'\*(15\v'20u'
.as 13 "\|\*(14
.as 12 \v'-20u'\*(13\v'20u'
.ds 12 \x'0'\x'0-20u'\f1\s10\*(12\|\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ".
.ps \n(99
.ft \n(98
\*(11
.PP
Fractions are made with
.BR over :
.I "a over b"
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.as 11 "yields 
.ps 10
.ft 1
.ds 12 "a
.ds 13 "b
.nr 12 \w'\s10\*(12'
.nr 13 \w'\s10\*(13'
.nr 14 \n(12
.if \n(13>\n(14 .nr 14 \n(13
.ds 12 \v'20u'\h'\n(14u-\n(13u/2u'\*(13\
\h'-\n(13u-\n(12u/2u'\v'-40u'\*(12\
\h'-\n(14u-\n(12u-2u/2u'\v'0u'\l'\n(14u'\v'20u'
.ds 12 \x'0'\f1\s10\*(12\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ".
.ps \n(99
.ft \n(98
\*(11
.PP
.B sqrt
makes square roots:
.I "1 over sqrt {ax sup 2 +bx+c}"
results in
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "\f11\fP
.ds 13 "ax
.ds 14 "\f12\fP
.as 13 \v'-20u'\*(14\v'20u'
.ds 14 "\(plbx\|\(plc
.as 13 "\|\*(14
.nr 13 \w'\s7\*(13'
.ds 13 \v'0u'\e\L'-60u'\l'\n(13u'\v'60u'\h'-\n(13u'\*(13
.nr 12 \w'\s7\*(12'
.nr 13 \w'\s7\*(13'
.nr 14 \n(12
.if \n(13>\n(14 .nr 14 \n(13
.ds 12 \v'60u'\h'\n(14u-\n(13u/2u'\*(13\
\h'-\n(13u-\n(12u/2u'\v'-80u'\*(12\
\h'-\n(14u-\n(12u-2u/2u'\v'0u'\l'\n(14u'\v'20u'
.ds 12 \x'0'\f1\s10\*(12\s\n(99\f\n(98\x'40u'
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 " .
.ps \n(99
.ft \n(98
\*(11
.PP
The keywords
.B from
and
.B to
introduce lower and upper
limits on arbitrary things:
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "\f1lim\fP
.ds 13 "n\|\(->
.ds 14 "\(if
.as 13 "\|\*(14
.nr 12 \w'\s10\*(12'
.nr 14 \n(12
.nr 13 \w'\s7\*(13'
.if \n(13>\n(14 .nr 14 \n(13
.ds 14 \v'40u'\h'\n(14u-\n(13u/2u'\s7\*(13\s10\h'-\n(14u-\n(13u/2u'\v'-40u'\
\h'\n(14u-\n(12u/2u'\*(12\h'\n(14u-\n(12u+2u/2u'\

.ds 12 \(*S
.ds 13 "\f10\fP
.ds 15 "n
.nr 12 \w'\s10\*(12'
.nr 16 \n(12
.nr 13 \w'\s7\*(13'
.if \n(13>\n(16 .nr 16 \n(13
.nr 15 \w'\s7\*(15'
.if \n(15>\n(16 .nr 16 \n(15
.ds 16 \v'40u'\h'\n(16u-\n(13u/2u'\s7\*(13\s10\h'-\n(16u-\n(13u/2u'\v'-40u'\
\h'\n(16u-\n(12u/2u'\*(12\h'\n(16u-\n(12u+2u/2u'\
\v'-40u'\h'-\n(16u-\n(15u/2u'\s7\*(15\s10\h'\n(16u-\n(15u/2u'\v'40u'\

.as 14 "\*(16
.ds 12 "x
.ds 13 "i
.as 12 \v'20u'\*(13\v'-20u'
.as 14 "\*(12
.ds 14 \x'0'\x'0-20u'\f1\s10\*(14\|\s\n(99\f\n(98\x'20u'
.as 11 \*(14
.ps \n(99
.ft \n(98
.as 11 "
.ps \n(99
.ft \n(98
\*(11
is made with
.I "lim from {n\-> inf } sum from 0 to n x sub i."
.PP
Left and right brackets, braces, and so forth, of the right height 
are made with
.B left
and
.B right:
.sp
.I "left [ x sup 2 + y sup 2 over alpha right ] ~=~1"
produces
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "x
.ds 13 "\f12\fP
.as 12 \v'-20u'\*(13\v'20u'
.ds 13 "\(pl
.as 12 "\|\*(13
.ds 13 "y
.ds 14 "\f12\fP
.as 13 \v'-20u'\*(14\v'20u'
.ds 14 "\(*a
.nr 13 \w'\s6\*(13'
.nr 14 \w'\s6\*(14'
.nr 15 \n(13
.if \n(14>\n(15 .nr 15 \n(14
.ds 13 \v'20u'\h'\n(15u-\n(14u/2u'\*(14\
\h'-\n(14u-\n(13u/2u'\v'-40u'\*(13\
\h'-\n(15u-\n(13u-2u/2u'\v'0u'\l'\n(15u'\v'20u'
.as 12 "\*(13
.ds 12 \|\v'-10u'\b'\(lc\(bv\(lf'\v'10u'\*(12\|\v'-10u'\b'\(rc\(bv\(rf'\v'10u'
.ds 13 "\ 
.as 12 "\*(13
.ds 13 "\(eq
.as 12 "\|\*(13
.ds 13 "\ 
.as 12 "\|\*(13
.ds 13 "\f11\fP
.as 12 "\|\*(13
.ds 12 \x'0'\x'0-20u'\f1\s10\*(12\|\s\n(99\f\n(98\x'20u'
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ".
.ps \n(99
.ft \n(98
\*(11
.PP
The
.B right
clause is optional.
Legal characters after 
.B left
and
.B right
are braces, brackets, bars,
.B c
and
.B f
for ceiling and floor,
and "" for nothing at all (useful for a right-side-only bracket).
.PP
Vertical piles of things are made with 
.BR pile ,
.BR lpile ,
.BR cpile ,
and
.BR rpile :
.I "pile {a above b above c}"
produces
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "a
.ds 13 "b
.ds 14 "c
.nr 12 \w'\s10\*(12'
.nr 15 \n(12
.nr 13 \w'\s10\*(13'
.if \n(13>\n(15 .nr 15 \n(13
.nr 14 \w'\s10\*(14'
.if \n(14>\n(15 .nr 15 \n(14
.ds 15 \v'40u'\h'0u*\n(15u'\
\v'0u'\h'\n(15u-\n(14u/2u'\*(14\h'-\n(15u-\n(14u/2u'\v'0-40u'\
\v'0u'\h'\n(15u-\n(13u/2u'\*(13\h'-\n(15u-\n(13u/2u'\v'0-40u'\
\v'0u'\h'\n(15u-\n(12u/2u'\*(12\h'-\n(15u-\n(12u/2u'\v'0-40u'\
\v'80u'\h'1u*\n(15u'
.ds 15 \x'0'\x'0-20u'\f1\s10\*(15\s\n(99\f\n(98\x'20u'
.as 11 \*(15
.ps \n(99
.ft \n(98
.as 11 ".
.ps \n(99
.ft \n(98
\*(11
There can be an arbitrary number of elements in a pile.
.B lpile
left-justifies,
.B pile
and
.B cpile
center, with different vertical spacing,
and 
.B rpile
right justifies.
.PP
Matrices are made with
.BR matrix :
.I "matrix { lcol { x sub i above y sub 2 } ccol { 1 above 2 } }"
produces
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "x
.ds 13 "i
.as 12 \v'20u'\*(13\v'-20u'
.ds 13 "y
.ds 14 "\f12\fP
.as 13 \v'20u'\*(14\v'-20u'
.ds 14 "\f11\fP
.ds 15 "\f12\fP
.nr 12 \w'\s6\*(12'
.nr 16 \n(12
.nr 13 \w'\s6\*(13'
.if \n(13>\n(16 .nr 16 \n(13
.ds 16 \v'40u'\h'0u*\n(16u'\
\v'-20u'\*(13\h'-\n(13u'\v'0-60u'\
\v'-20u'\*(12\h'-\n(12u'\v'0-60u'\
\v'120u'\h'1u*\n(16u'
.nr 14 \w'\s6\*(14'
.nr 12 \n(14
.nr 15 \w'\s6\*(15'
.if \n(15>\n(12 .nr 12 \n(15
.ds 12 \v'40u'\h'0u*\n(12u'\
\v'-20u'\h'\n(12u-\n(15u/2u'\*(15\h'-\n(12u-\n(15u/2u'\v'0-60u'\
\v'-20u'\h'\n(12u-\n(14u/2u'\*(14\h'-\n(12u-\n(14u/2u'\v'0-60u'\
\v'120u'\h'1u*\n(12u'
.ds 13 "\*(16\ \ \*(12
.ds 13 \x'0'\x'0-40u'\f1\s10\*(13\s\n(99\f\n(98\x'20u'
.as 11 \*(13
.ps \n(99
.ft \n(98
.as 11 ".
.ps \n(99
.ft \n(98
\*(11
In addition, there is
.B rcol
for a right-justified column.
.PP
.vs 12p
Diacritical marks are made with
.BR dot ,
.BR dotdot ,
.BR hat ,
.BR tilde ,
.BR bar ,
.BR vec ,
.BR dyad ,
and
.BR under :
.I "x dot = f(t) bar"
is
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "x
.nr 12 \w'\s10\*(12'
.nr 10 0u
.ds 13 \v'-1'.\v'1'
.nr 13 \w'\s10\*(13'
.as 12 \h'-\n(12u-\n(13u/2u'\v'0-\n(10u'\*(13\v'\n(10u'\h'-\n(13u+\n(12u/2u'
.ds 13 "\(eq
.as 12 "\|\*(13
.ds 13 "\^f\|\|\f1(\fPt\|\f1)\fP
.nr 13 \w'\s10\*(13'
.nr 10 0u
.ds 14 \v'-1'\l'\n(13u'\v'1'
.nr 14 \w'\s10\*(14'
.as 13 \h'-\n(13u-\n(14u/2u'\v'0-\n(10u'\*(14\v'\n(10u'\h'-\n(14u+\n(13u/2u'
.as 12 "\|\*(13
.ds 12 \x'0'\f1\s10\*(12\|\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ",
.ps \n(99
.ft \n(98
\*(11
.I "y dotdot bar ~=~ n under"
is
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "y
.nr 12 \w'\s10\*(12'
.nr 10 0u
.ds 13 \v'-1'..\v'1'
.nr 13 \w'\s10\*(13'
.as 12 \h'-\n(12u-\n(13u/2u'\v'0-\n(10u'\*(13\v'\n(10u'\h'-\n(13u+\n(12u/2u'
.nr 12 \w'\s10\*(12'
.nr 10 20u
.ds 13 \v'-1'\l'\n(12u'\v'1'
.nr 13 \w'\s10\*(13'
.as 12 \h'-\n(12u-\n(13u/2u'\v'0-\n(10u'\*(13\v'\n(10u'\h'-\n(13u+\n(12u/2u'
.ds 13 "\ 
.as 12 "\|\*(13
.ds 13 "\(eq
.as 12 "\|\*(13
.ds 13 "\ 
.as 12 "\|\*(13
.ds 13 "n
.nr 13 \w'\s10\*(13'
.nr 10 0u
.ds 14 \l'\n(13u'
.nr 14 \w'\s10\*(14'
.as 13 \h'-\n(13u-\n(14u/2u'\v'0-\n(10u'\*(14\v'\n(10u'\h'-\n(14u+\n(13u/2u'
.as 12 "\|\*(13
.ds 12 \x'0'\x'0-20u'\f1\s10\*(12\|\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ",
.ps \n(99
.ft \n(98
\*(11
and
.I "x vec ~=~ y dyad"
is
.nr 99 \n(.s
.nr 98 \n(.f
.rm 11 
.ps 10
.ft 1
.ds 12 "x
.nr 12 \w'\s10\*(12'
.nr 10 0u
.ds 13 \v'-1'_\v'1'
.nr 13 \w'\s10\*(13'
.as 12 \h'-\n(12u-\n(13u/2u'\v'0-\n(10u'\*(13\v'\n(10u'\h'-\n(13u+\n(12u/2u'
.ds 13 "\ 
.as 12 "\|\*(13
.ds 13 "\(eq
.as 12 "\|\*(13
.ds 13 "\ 
.as 12 "\|\*(13
.ds 13 "y
.nr 13 \w'\s10\*(13'
.nr 10 0u
.ds 14 \v'-1'_\v'1'
.nr 14 \w'\s10\*(14'
.as 13 \h'-\n(13u-\n(14u/2u'\v'0-\n(10u'\*(14\v'\n(10u'\h'-\n(14u+\n(13u/2u'
.as 12 "\|\*(13
.ds 12 \x'0'\f1\s10\*(12\|\s\n(99\f\n(98
.as 11 \*(12
.ps \n(99
.ft \n(98
.as 11 ".
.ps \n(99
.ft \n(98
\*(11
.PP
Sizes and font can be changed with
.B size
.I n
or
.B size
.BI \(+- n,
.BR roman ,
.BR italic ,
.BR bold ,
and
.BR font
.I n.
Size and fonts can be changed globally in a document by
.B gsize
.I n
and
.B gfont
.IR n ,
or by the command-line arguments
.BI \-s n
and
.BI \-f n.
.PP
Normally subscripts and superscripts are reduced by
3 point sizes from the previous size;
this may be changed by the command-line argument
.BI \-p n.
.PP
Successive display arguments can be lined up.
Place
.B mark
before the desired lineup point in the first equation;
place
.B lineup
at the place that is to line up vertically in subsequent equations.
.PP
Shorthands may be defined
or existing keywords redefined with
.BI define :
.I "define thing % replacement %"
defines a new token called
.I thing
which will be replaced by
.I replacement
whenever it appears thereafter.
The 
.I %
may be any character that does not occur in
.I replacement.
.PP
Keywords like 
.I sum
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ds 11 "\f1(\fP
.ds 12 \(*S
.as 11 "\|\*(12
.ds 12 "\f1)\fP
.as 11 "\|\*(12
.ds 11 \x'0'\f1\s10\*(11\|\s\n(99\f\n(98
.nr 11 \w'\*(11'
.nr MK 0
.if 40>\n(.v .ne 40u
.rn 11 10
\*(10
.ps \n(99
.ft \n(98
.EN
.I int
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ds 11 "\f1(\fP
.ds 12 \(is
.as 11 "\|\*(12
.ds 12 "\f1)\fP
.as 11 "\|\*(12
.ds 11 \x'0'\f1\s10\*(11\|\s\n(99\f\n(98
.nr 11 \w'\*(11'
.nr MK 0
.if 40>\n(.v .ne 40u
.rn 11 10
\*(10
.ps \n(99
.ft \n(98
.EN
.I inf
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ds 11 "\f1(\fP
.ds 12 "\(if
.as 11 "\|\*(12
.ds 12 "\f1)\fP
.as 11 "\|\*(12
.ds 11 \x'0'\f1\s10\*(11\|\s\n(99\f\n(98
.nr 11 \w'\*(11'
.nr MK 0
.if 40>\n(.v .ne 40u
.rn 11 10
\*(10
.ps \n(99
.ft \n(98
.EN
and shorthands like
>=
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ds 11 "\f1(\fP\|\(>=\|\f1)\fP
.ds 11 \x'0'\f1\s10\*(11\|\s\n(99\f\n(98
.nr 11 \w'\*(11'
.nr MK 0
.if 40>\n(.v .ne 40u
.rn 11 10
\*(10
.ps \n(99
.ft \n(98
.EN
\->
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ds 11 "\f1(\fP\|\(->\|\f1)\fP\|\f1,\fP
.ds 11 \x'0'\f1\s10\*(11\|\s\n(99\f\n(98
.nr 11 \w'\*(11'
.nr MK 0
.if 40>\n(.v .ne 40u
.rn 11 10
\*(10
.ps \n(99
.ft \n(98
.EN
and
!=
.EQ
.nr 99 \n(.s
.nr 98 \n(.f
.ps 10
.ft 1
.ds 11 "\f1(\fP
.ds 12 "\(!=
.as 11 "\|\*(12
.ds 12 "\f1)\fP
.as 11 "\|\*(12
.ds 11 \x'0'\f1\s10\*(11\|\s\n(99\f\n(98
.nr 11 \w'\*(11'
.nr MK 0
.if 40>\n(.v .ne 40u
.rn 11 10
\*(10
.ps \n(99
.ft \n(98
.EN
are recognized.
Greek letters are spelled out in the desired case, as in
.I alpha
or
.I GAMMA.
Mathematical words like sin, cos, log are made Roman automatically.
.IR Troff (1)
four-character escapes like \e(bs (\(bs)
can be used anywhere.
Strings enclosed in double quotes "..."
are passed through untouched;
this permits keywords to be entered as text,
and can be used to communicate
with 
.I troff
when all else fails.
.SH Restrictions
To embolden digits, parens, etc.,
it is necessary to quote them,
as in bold "12.3".
.SH See Also
troff(1), tbl(1), ms(7), eqnchar(7)
.br
\fIReference Pages for Unsupported Software\fP
.br
B. W. Kernighan and L. L. Cherry,
.ul
Typesetting Mathematics\(emUser's Guide
.br
J. F. Ossanna,
.ul
NROFF/TROFF User's Manual
