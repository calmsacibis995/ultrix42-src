.\" SCCSID: @(#)od.1	8.2	9/19/90
.TH od 1
.SH Name
od \- create file octal dump
.SH Syntax
.B od
[\|\fIoptions\fR\|] [\|\fIfile\fR\|] [\|\fIoffset\fR\|] [\|\fIlabel\fR\|]
.SH Description
.NXR "od command"
.NXA "od command" "strings command"
.NXR "file" "dumping in various format"
The
.PN od
command displays
.IR file ,
or its standard input,
in one or more dump formats
as selected by the first argument.
If the first argument is missing,
.B \-o
is the default.
Dumping continues until end-of-file.
.SH Options
.NXR "od command" "options"
.IP \fB\-a\fR[\fB\|p\||\|P\|\fR] 8
Interprets bytes as characters and display them with their ACSII names.
If the
.B p
character is given also, then bytes with even parity are underlined.
The
.B P
character causes bytes with odd parity to be underlined.
Otherwise the parity bit is ignored.
.IP \fB\-b\fR 
Displays bytes as unsigned octal.
.IP \fB\-c\fR 
Displays bytes as ASCII characters.
Certain non-graphic characters appear as C escapes:
null=\e0,
backspace=\eb,
formfeed=\ef,
newline=\en,
return=\er,
tab=\et;
others appear as 3-digit octal numbers.
Bytes with the parity bit set are displayed in octal.
.IP \fB\-d\fR 
Displays short words as unsigned decimal.
.IP \fB\-f\fR 
Displays long words as floating point.
.IP \fB\-h\fR 
Displays short words as unsigned hexadecimal.
.IP \fB\-i\fR 
Displays short words as signed decimal.
.IP \fB\-l\fR 
Displays long words as signed decimal.
.IP \fB\-o\fR 
Displays short words as unsigned octal.
.IP \fB\-s\fR[\fIn\fR] 
Looks for strings of ASCII characters of 
.I n
minimum length.  By default, the minimum length is 3 characters.
.IP \fB\-v\fR 
Displays all data and indicates lines identical to the last
line shown with an * in column 1.
.IP \fB\-w\fR[\fIn\fR] 
Specifies the number of input bytes to be interpreted and displayed
on each output line. If
.B w
is not specified, 16 bytes are read for each display line.
If
.I n
is not specified, it defaults to 32.
.IP \fB\-x\fR 
Displays short words as hexadecimal.
.PP
An upper case format character implies the long or double precision
form of the object.
.PP
The
.I offset
argument specifies the byte offset
into the file where dumping is to commence.
By default this argument is interpreted in octal.
A different radix can be specified;
If ``\fB.\fR'' is appended to the argument, then
.I offset
is interpreted in decimal.
If
.I offset
begins with ``\fBx\fP'' or ``\fB0x\fP'',
it is interpreted in hexadecimal.
If ``\fBb\fP'' (``\fBB\fP'') is appended, the offset is interpreted
as a block count, where a block is 512 (1024) bytes.
If the
.I file
argument is omitted, an
.I offset
argument must be preceded by
.RB `` + ''.
.PP
The radix of the displayed address is the same as the radix of the
.IR offset ,
if specified; otherwise it is octal.
.PP
The
.I label
is interpreted as a pseudo-address for the first byte displayed.
It is shown in ``()'' following the file offset.
It is intended to be used with
core images to indicate the real memory address.
The syntax for
.I label
is identical to that for
.IR offset .
.SH Restrictions
A file name argument can't start with ``+''.
A hexadecimal offset can't be a block count.
Only one file name argument can be given.
.PP
It is an historical botch to require specification of object, radix, and
sign representation in a single character argument.
.SH See Also
adb(1) - VAX only, dbx(1)
