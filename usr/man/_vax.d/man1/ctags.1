.\" SCCSID: @(#)ctags.1	8.3	3/28/91
.TH ctags 1
.SH Name
ctags \- create a tags file
.SH Syntax
.B ctags
[\|\fIoptions\fR\|] \fIname...\fR
.SH Description
.NXR "ctags command"
.NXS "tags file" "ctags command"
.NXA "f77 compiler" "ctags command"
The
.PN ctags
command
makes a tags file for
.MS ex 1
from the specified C, Pascal and Fortran sources.
.PP
A tags file gives the locations of specified objects (in this case
functions and typedefs) in a group of files.  Each line of the tags
file contains the object name, the file in which it is defined, and
an address specification for the object definition.  Functions are
searched with a pattern, typedefs with a line number.  Specifiers are
given in separate fields on the line, separated by blanks or tabs.
.PP
Using the
.I tags
file,
.PN ex
can quickly find these objects definitions.
.PP
If the
.B \-x
flag is given, 
.PN ctags
writes to standard output a list containing each object name, its line
number, the file name in which it is defined, and the text of the line.
This list is a simple index which can be printed out as an off-line
readable function index.
.SH Options
.NXR "ctags command" "options"
.TP 20
.B \-a
Appends information to an existing tags file.
.TP
.B \-B
Uses backward search patterns (?...?).
.TP
.B \-F
Uses forward search patterns (/.../) (default).
.TP
.B \-t
Creates typedef tags.
.TP
.B \-u
Updates the specified tags file.  
All references to tags are deleted,
and the new values are appended to the file.
Note that this option is implemented in a way which is rather slow.
It is usually faster to simply rebuild the
.I tags
file.)
.sp
The tag
.I main
is treated specially in C programs.
The tag formed is created by prepending
.I M
to the name of the file, with a trailing .c removed, if
any, and leading pathname components also removed.
This makes use of
.PN ctags
practical in directories with more than one program.
.TP
.B \-v
Generates an index listing function name, file name, and pages number.
Since the output will be sorted into lexicographic order,
it may be desired to run the output through
.BR "sort \-f" .
For example,
.EX
ctags \-v files | sort \-f > index
.EE
Files whose name ends in 
.B \.c
or
.B \.h
are assumed to be C source files and are searched for C routine and
macro definitions.
Others are first examined to see if they contain any Pascal or
Fortran routine definitions; if not, they are processed again
looking for C definitions.
.TP
.B \-w
Suppresses warning diagnostics and generates a listing file.  This list
contains each object name, its line number, the file name in which it
is defined, and the text of the line, and is identical to the list
produced when no options are given.
.TP
.B \-x
Writes to standard output a list containing each object name, its line
number, the file name in whcih it is defined, and the text of the line.
.SH Restrictions
.NXR "ctags command" "restricted"
Recognition of \fBfunctions\fR, \fBsubroutines\fR and \fBprocedures\fR
for FORTRAN and Pascal do not deal
with block structure.  Therefore you cannot have two
Pascal procedures in different blocks with the same name.
.PP
Does not know about #ifdefs.
.PP
Does not know about Pascal types.
Relies on the input being well formed to detect typedefs.
Use of 
.B \-tx
shows only the last line of typedefs.
.SH Files
.DT
tags		output tags file
.SH See Also
ex(1), vi(1)
