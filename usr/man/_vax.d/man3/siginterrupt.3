.TH siginterrupt 3
.UC 6
.SH Name
siginterrupt \- allow signals to interrupt system calls
.SH Syntax
.nf
.B siginterrupt(\fIsig, flag\fP)
.B int \fIsig, flag\fP;
.fi
.SH Description
The
.PN siginterrupt
system call
.NXR "siginterrupt"
is used to change the system call restart
behavior when a system call is interrupted by the specified signal.
If the flag is false (0), then system calls will be restarted if
they are interrupted by the specified signal
and no data has been transferred yet.
System call restart is the default behavior on 4.2 BSD.
.PP
If the flag is true (1), then restarting of system calls is disabled.
If a system call is interrupted by the specified signal
and no data has been transferred,
the system call will return \-1 with errno set to EINTR.
Interrupted system calls that have started transferring
data will return the amount of data actually transferred.
System call interrupt is the signal behavior found on 4.1 BSD
and AT&T System V systems.
.PP
Note that the new signal handling semantics are not
altered in any other way.
Most notably, signal handlers always remain installed until
explicitly changed by a subsequent
.MS sigvec 2
call, and the signal mask operates as documented in
.MS sigvec 2.
Programs may switch between restartable and interruptible
system call operation as often as desired in the execution of a program.
.PP
Issuing a
.PN siginterrupt 
call during the execution of a signal handler will cause
the new action to take place on the next signal to be caught.
.SH Environment
This library routine uses an extension of the
.MS sigvec 2
system call that is not available in ULTRIX 2.0 or earlier versions.
Hence it should not be used if backward compatibility is needed.
.SH Return Values
A 0 value indicates that the call succeeded.
A \-1 value indicates that an invalid signal number has been supplied.
.SH See Also
sigvec(2), sigblock(2), sigpause(2), sigsetmask(2)
