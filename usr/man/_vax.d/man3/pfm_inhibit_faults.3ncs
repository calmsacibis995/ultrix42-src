.\"	@(#)pfm_inhibit_faults.3ncs	8.1 of 9/11/90
.TH pfm_inhibit_faults 3ncs
.SH Name
pfm_inhibit_faults \- inhibit asynchronous faults 
.SH Syntax
.nf
#include <idl/c/base.h>
#include <idl/c/pfm.h>

void pfm_$inhibit_faults()
.fi
.\".SH SYNOPSIS (PASCAL)
.\".DS
.\"\fB%include '/sys/ins/base.ins.pas';\fR
.\"\fB%include '/sys/ins/pfm.ins.pas';\fR
.\"
.\"\fBprocedure pfm_$inhibit_faults;\fR
.\".DE
.ig
.SH Synopsis (fortran)
.nf
\fB%include '/sys/ins/base.ins.ftn'\fR
\fB%include '/sys/ins/pfm.ins.ftn'\fR

	 \fBcall pfm_$inhibit_faults\fR
.fi
..
.SH Description
The 
.PN pfm_$inhibit_faults
routine prevents asynchronous faults from being passed to the calling process.
While faults are inhibited,
the operating system holds
at most one asynchronous fault.
Consequently,
a call to 
.PN pfm_$inhibit_faults
can result in the loss of some signals.
It is good practice to inhibit faults
only when absolutely necessary.
.NXR "Fault Management" "pfm_inhibit_faults"
.NT
This call has no effect on the processing of synchronous faults
such as floating-point and overflow exceptions, access
violations, and so on.
.NE
.SH Files
.PN /usr/include/idl/c/base.h
.br
.PN /usr/include/idl/base.idl
.br
.PN /usr/include/idl/c/pfm.h
.SH See Also
intro(3ncs), pfm_enable_faults(3ncs), pfm_inhibit(3ncs)
.\".DM "\
.\"path syscalls/pfm/pfm_$inhibit_faults\
.\"type reference\
.\"book syscalls\
.\"chapter pfm\
.\"section pfm_$inhibit_faults\
.\""
.\".DD "\
.\"inhibit(ed)(s)(ing) prevent(ed)(s)(ing) asynch(ronous) fault(s) pfm pfm_$\
.\""
