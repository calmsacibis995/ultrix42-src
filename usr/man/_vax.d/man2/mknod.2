.\" SCCSID: @(#)mknod.2	4.1	12/9/88
.TH mknod 2
.SH Name
mknod \- make a directory or a special file 
.SH Syntax
.nf
#include <sys/types.h>
#include <sys/stat.h>
.PP
int mknod(\fIpath, mode, dev\fP)
char *\fIpath\fP;
mode_t \fImode\fP;
int \fIdev\fP;
.fi
.SH Description
.NXR "mknod system call"
.NXAM "mknod system call" "mkdir command"
.NXR "file" "creating"
.NXR "directory" "creating"
.NXR "special file" "creating"
The 
.PN mknod
system call creates a new file
whose name is
.I path.
The mode of the new file
(including special file bits)
is initialized from
.IR mode, 
where the value of 
.I mode
is interpreted as follows:
.PP
S_IFMT-0170000  File type; one of the following:
.RS
S_IFIFO-0010000  FIFO special
.br
S_IFCHR-0020000  Character special
.br
S_IFDIR-0040000  Directory
.br
S_IFBLK-0060000  Block special
.br
S_IFREG-0100000 
     or 0000000  Ordinary file
.RE
.PP
S_IRWXU-0007000 Execution mode; made from the following:
.RS
S_ISUID-0004000  Set user ID on execution
.br
S_ISGID-0002000  Set group ID on execution
.br
S_ISVTX-0001000  Save text image after execution
.RE
.PP
        00777   Access permissions; made from the following:
.RS
S_IREAD-0000400  Read by owner
.br
S_IWRITE-0000200 Write by owner
.br 
S_IEXEC-0000100  Execute (search on directory) by owner
.br
s_IRWXG-0000070  Read, write, execute (search) by group
.br
S_IRWXD-0000007  Read, write, execute (search) by others
.RE
.PP
The file's owner ID is set to the process's effective
user ID.  The file's group ID is set to the 
parent directory's  group ID.
.PP
Values of \fImode\fP other than those in the preceeding list
are undefined and should not be used.  The 
low-order nine bits of \fImode\fP are modified
by the process's file mode creation mask:
all bits set in the process's file mode creation mask
are cleared.  For further information, see 
.MS umask 2 .
If \fImode\fP
indicates a block or character special file, 
.I dev
is a configuration dependent specification of a
character or block I/O device.  If
.I mode
does not indicate a block special or character
special device, 
.I dev
is ignored.
.PP
For file types other than FIFO special, only the superuser can invoke the
.PN mknod
system call. 
.SH Return Values
The
.PN mknod
system call returns a value of 0 upon successful completion.
Otherwise, 
.PN mknod
returns a value of \-1, and sets \fIerrno\fP
to indicate the error.
.SH Diagnostics
The
.PN mknod
system call fails and the file mode is unchanged under the following
conditions:
.TP 15
[EPERM]
The process's effective user ID is not superuser.
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[ENOENT]
A component of the path prefix does not exist.
.TP 15
[EROFS]
The named file resides on a read-only file system.
.TP 15
[EEXIST]
The named file exists.
.TP 15
[EFAULT]
.I Path
points outside the process's allocated address space.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
.TP 15
[ENAMETOOLONG]
A component of a pathname exceeded 255 characters, or an entire
pathname exceeded 1023 characters.
.TP 15
[EACCES]
Search permission is denied for a component of the path prefix.
.TP 15
[EIO]
An I/O error occurred while making the directory entry or allocating
the inode.
.TP 15
[ENOSPC]
The directory in which the entry for the new node is being placed
cannot be extended, because there is no space left on the
file system.
.TP 15
[ENOSPC]
There are no free inodes on the file system on which
the node is being created.
.TP 15
[EDQUOT]
The directory in which the entry for the new node is being
placed cannot be extended because the user's quota of disk
blocks on the file system containing the directory has been
exhausted.
.TP 15
[EDQUOT]
The user's quota of inodes on the file system on which the
node is being created has been exhausted.
.TP 15
[ESTALE]
The file handle given in the argument is invalid.  The
file referred to by that file handle no longer exists
or has been revoked.
.TP
[ETIMEDOUT]
A connect request or remote file operation failed
because the connected party
did not properly respond after a period
of time that is dependent on the communications protocol.
.SH See Also
mkdir(1), chmod(2), execve(2), stat(2), umask(2), fs(5)
