.\" SCCSID: @(#)getsockopt.2	6.1	4/27/89
.TH getsockopt 2
.SH Name
getsockopt, setsockopt \- get or set options on sockets
.SH Syntax
.nf
.B #include <sys/types.h>
.B #include <sys/socket.h>
.sp .5
.B getsockopt(s, level, optname, optval, optlen)
.B int s, level, optname;
.B char *optval;
.B int *optlen;
.sp
.B setsockopt(s, level, optname, optval, optlen)
.B int s, level, optname;
.B char *optval;
.B int optlen;
.fi
.SH Description
.NXR "getsockopt system call"
.NXR "setsockopt system call"
.NXR "socket" "getting options"
.NXR "socket" "setting options"
The
.PN getsockopt
and
.PN setsockopt
system calls manipulate options
associated with a socket.  Options can exist at multiple
protocol levels; they are always present at the uppermost
socket level.
.PP
When manipulating socket options, the level at which the
option resides and the name of the option must be specified.
To manipulate options at the socket level,
.I level
is specified as SOL_SOCKET.  To manipulate options at any
other level, the protocol number of the appropriate protocol
controlling the option must be supplied.  For example,
to indicate an option is to be interpreted by the TCP protocol,
.I level
should be set to the protocol number of TCP.  For further
information, see 
.MS getprotoent 3n .
.PP
The parameters
.I optval
and
.I optlen
are used to access option values for
.PN setsockopt .
For
.PN getsockopt ,
they identify a buffer in which the values for the
requested options are to be returned.  For
.PN getsockopt ,
.I optlen
is a value-result parameter, initially containing the
size of the buffer pointed to by
.IR optval 
and modified on return to indicate the actual size of
the value returned.  If no option value is
to be supplied or returned,
.I optval
can be supplied as 0.
.PP
The
.I optname
parameter and any specified options are 
passed uninterpreted to the appropriate
protocol module for interpretation.
The include file <sys/socket.h>
contains definitions for socket level options.
For further information, see 
.MS socket 2 .
Options at other protocol levels vary in format and
name.  Consult the 
.MS arp 4p ,
.MS ip 4p ,
.MS tcp 4p
or
.MS udp 4p 
reference pages for details.
.SH Return Values
A zero is returned if the call succeeds, and \-1 is returned if it fails.
.SH Diagnostics
The 
.PN getsockopt
call fails under the following conditions:
.TP 15
[EBADF]
The argument 
.I s
is not a valid descriptor.
.br
.ne 2
.TP 15
[ENOTSOCK]
The argument 
.I s
is a file, not a socket.
.TP 15
[ENOPROTOOPT]
The option is unknown.
.TP 15
[EFAULT]
The address pointed to by
.I optval
is not in a valid part of the
process address space.
For
.PN getsockopt ,
this error can also be returned if
.I optlen
is not in a valid part of the process address space.
.SH See Also
fcntl(2), socket(2), getprotoent(3n),
.I "Guide to the Data Link Interface"
