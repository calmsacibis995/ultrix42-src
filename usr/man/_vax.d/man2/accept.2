.\" SCCSID: @(#)accept.2	6.2	8/29/89
.TH accept 2
.SH Name
accept \- accept a connection on a socket
.SH Syntax
.ft B
.nf
#include <sys/types.h>
#include <sys/socket.h>
.PP
.ft B
accept(s, addr, addrlen)
int ns, s;
struct sockaddr *addr;
int *addrlen;
.fi
.SH Description
.NXR "accept system call"
.NXR "socket" "accepting connection"
The 
.PN accept
system call accepts a connection on a socket. The argument
.I s
is a socket that has been created with the
.PN socket ,
call, bound to an address with the
.PN bind  ,
call and is listening for connections after a 
.PN listen 
call.
The 
.PN accept
system call extracts the first connection
on the queue of pending connections, creates
a new socket with the same properties of 
.I s
and allocates a new file descriptor,
.IR ns ,
for the socket.  If no pending connections are
present on the queue, and the socket is not marked
as nonblocking,
.PN accept
blocks the caller until a connection is present.
If the socket is marked nonblocking and no pending
connections are present on the queue, 
.PN accept
returns an error. 
The accepted socket,
.IR ns ,
cannot be used
to accept more connections.  The original socket
.B s
remains open.
.PP
The argument
.I addr
is a result parameter that is filled in with
the address of the connecting entity,
as known to the communications layer.
The exact format of the
.I addr
parameter is determined by the domain in which the communication
is occurring.
The 
.I addrlen
is a value-result parameter; it should initially contain the
amount of space pointed to by
.IR addr .
On return, 
.IR addr
contains the actual length in bytes of the
address returned.
This call
is used with connection-based socket types, currently with SOCK_STREAM.
.PP
You can use the  
.PN select 
call for the purposes of doing an
.PN accept
call by selecting the socket for reading.
.SH Return Values
The call returns \-1 on error.  If the call succeeds, it returns a non-negative
integer which is a descriptor for the accepted socket.
.SH Diagnostics
The 
.PN accept
call fails if:
.TP 15
[EBADF]
The descriptor is invalid.
.TP 15
[ENOTSOCK]
The descriptor references a file, not a socket.
.TP 15
[EOPNOTSUPP]
The referenced socket is not of type SOCK_STREAM.
.TP 15
[EFAULT]
The \fIaddr\fP parameter is not in a writable part of the
user address space.
.TP 15
[EWOULDBLOCK]
The socket is marked nonblocking and no connections
are present to be accepted.
.SH See Also
bind(2), connect(2), listen(2), select(2), socket(2)
