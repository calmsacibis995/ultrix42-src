.\" SCCSID: @(#)tar.5	8.1	9/11/90
.TH tar 5 
.SH Name
tar, mdtar \- tape archive file format
.SH Description
.NXR "tar file" "format"
.NXR "mdtar file" "format"
The tape archive command 
.PN tar 
dumps several files, including special files,
into one,
in a medium suitable for transportation.
.PP
A
.PN tar
tape or file is a series of blocks.
Each block is of size TBLOCK.
A file on the tape is represented by a header block,
which describes the file,
followed by zero or more blocks,
which give the contents of the file.
At the end of the tape are two blocks filled with binary zeros,
as an end-of-file indicator.  
.PP
The blocks are grouped for physical I/O operations.
Each group of
.I n
blocks (where
.I n
is set by the 
.PN b
option on the 
.MS tar 1
command line, and the default is 20 blocks)
is written with a single system
call;
on 9-track tapes,
the result of this write is a single tape record.
The last group is always written at the full size,
so blocks after the two zero blocks contain random data.
On reading,
the specified or default group size is used for the first read,
but if that read returns less than a full tape block,
the reduced block size is used for further reads.
.PP
The following is an example of a header block:
.NXR(e) "tar file" "header block"
.EX
#define TBLOCK  512
#define NAMSIZ  100

union hblock {
        char dummy[TBLOCK];
        struct header {
                char name[NAMSIZ];
                char mode[8];
                char uid[8];
                char gid[8];
                char size[12];
                char mtime[12];
                char chksum[8];
                char linkflag;
                char linkname[NAMSIZ];
                char rdev[6]
        } dbuf;
};
.EE
.PP
The
.I name
field is a null-terminated string.
The other fields are 0-filled octal numbers in ASCII.
Each field (of width \fIw\fR) contains \fIw\fR minus 2
digits,
a space, and a null, except
.I size
and
.I mtime ,
which do not contain the trailing null.
The
.I name
field specifies the name of the file,
as specified on the 
.PN tar
command line.
Files dumped because they were in a directory that
was named in the command line have the directory name as prefix and
.I \fH/\fIfilename
as suffix.
.\" Whatever format was used in the command line
.\" will appear here, such as
.\" .I \&./yellow
.\" or
.\" .IR \&../../brick/./road/.. .
.\" To retrieve a file from a tar tape, an exact prefix match must be specified,
.\" including all of the directory prefix information used on the command line
.\" that dumped the file (if any).
The
.PN mode
field specifies the file mode,
with the top bit masked off.
The
.I uid
and
.I gid
fields specify the user and group numbers that own the file.
The
.I size
field specifies the size of the file in bytes.
Links and symbolic links are dumped
with this field specified as zero.
The
.I mtime
field specifies the modification time of the file
at the time it was dumped.
The
.I chksum
field is a decimal ASCII value,
which represents the sum of all the bytes in the header block.
When calculating the checksum,
the 
.I chksum
field is treated as if it were all blanks.
The
.I linkflag
field is ASCII 0 if the file is normal or a special file
and ASCII 1 if it is a hard link,
and ASCII 2 if it is a symbolic link.
The name to which it is linked,
if any, is in
.I linkname,
with a trailing null.
Unused fields of the header are binary zeros and are included in the
checksum.
The
.I rdev
field encodes the ASCII representation of a device special file's
major and minor device numbers.
.PP
The first time a given i-node number is dumped,
it is dumped as a regular file.
The second and subsequent times,
it is dumped as a link instead.
Upon retrieval,
if a link entry is retrieved,
but not the file it was linked to,
an error message is printed and the tape must be manually
rescanned to retrieve the linked file.
.PP
The encoding of the header is designed to be portable across machines.
.SH Restrictions
.NXR "tar file" "restricted"
Names or link names longer than NAMSIZ
produce error reports and cannot be dumped.
.SH See Also
tar(1)
