.\" SCCSID: @(#)vgrindefs.5	8.1	9/11/90
.tr ||
.TH vgrindefs 5 VAX "" Unsupported
.SH Name
vgrindefs \- vgrind's language definition data base
.SH Syntax
.B /usr/lib/vgrindefs
.SH Description
The
.PN vgrindefs
database contains all language definitions for vgrind.  The database is
very similar to 
.MS termcap 5 .
.SS Fields
The following table names and describes each field.  
.PP
.nf
.ta \w'k0-k9  'u +\w'Type  'u
\fBName	Type	Description\fR
pb	str	regular expression for start of a procedure
bb	str	regular expression for start of a lexical block
be	str	regular expression for the end of a lexical block
cb	str	regular expression for the start of a comment
ce	str	regular expression for the end of a comment
sb	str	regular expression for the start of a string
se	str	regular expression for the end of a string
lb	str	regular expression for the start of a character constant
le	str	regular expression for the end of a character constant
tl	bool	present means procedures are only defined at the top 
		lexical level
oc	bool	present means upper and lower case are equivalent
kw	str	a list of keywords separated by spaces
.fi
.PP
.PP
Entries may continue onto multiple lines by giving a \e as the last
character of a line.
Capabilities in
.I vgrindefs
are of two types:
Boolean capabilities which indicate that the language has
some particular feature
and string
capabilities which give a regular expression or 
keyword list.
.SS Regular Expressions
The 
.PN vgrindefs
database  uses regular expression which are very similar to those of 
.MS ex 1
and
.MS lex 1 .
The characters `^', `$', `:' and `\e'
are reserved characters and must be
quoted with a preceding \e if they
are to be included as normal characters.
The metasymbols and their meanings are:
.IP $
the end of a line
.IP ^
the beginning of a line
.IP \ed
a delimiter (space, tab, newline, start of line)
.IP \ea
matches any string of symbols (like .* in lex)
.IP \ep
matches any alphanumeric name.  In a procedure definition (pb) the string
that matches this symbol is used as the procedure name.
.IP ()
grouping
.IP |
alternation
.IP ?
last item is optional
.IP \ee
preceding any string means that the string will not match an
input string if the input string is preceded by an escape character (\e).
This is typically used for languages (like C) which can include the
string delimiter in a string by escaping it.
.PP
Unlike other regular expressions in the system,  these match words
and not characters.  Hence something like "(tramp|steamer)flies?"
would match "tramp", "steamer", "trampflies", or "steamerflies".
.SS Keyword List
The keyword list is just a list of keywords in the language separated
by spaces.  If the "oc" boolean is specified, indicating that upper
and lower case are equivalent, then all the keywords should be 
specified in lower case.
.SH Examples
The following entry, which describes the C language, is 
typical of a language entry.
.PP
.nf
C|c:\
	:pb=^\ed?*?\ed?\ep\ed?\(\ea?\):bb={:be=}:cb=/*:ce=*/:sb=":se=\ee":\e
	:lb=':le=\ee':tl:\e
	:kw=asm auto break case char continue default do double else enum\e
	extern float for fortran goto if int long register return short\e
	sizeof static struct switch typedef union unsigned while #define\e
	#else #endif #if #ifdef #ifndef #include #undef # define else endif\e
	if ifdef ifndef include undef:
.fi
.PP
Note that the first field is just the language name (and any variants
of it).  Thus the C language could be specified to
.MS vgrind 1 
as c or C.
.SH Files
.DT
/usr/lib/vgrindefs	file containing terminal descriptions
.SH See Also
troff(1), vgrind(1)
