.TH unifdef 1 "" "" Unsupported
.SH Name
unifdef \- removes ifdef'ed lines
.SH Syntax
.B unifdef
[
.B \-c
.BI \-D sym
.BI \-id sym
.BI \-iu sym
.B \-l
.B \-t
.BI \-U sym
] ...  [ 
.I file 
]
.SH Description
The 
.PN unifdef
command is useful for removing ifdef'ed lines from a file while 
otherwise leaving the file alone.
The 
.PN unifdef
command is like a stripped-down C preprocessor:
it is smart enough to deal with the nested ifdefs, comments,
single and double
quotes of C syntax so that it can do its job, but 
it doesn't do any including or interpretation of macros.
Neither does it strip out comments, though it recognizes 
and ignores them.
Ifdefs involving symbols you don't specify are untouched and copied out
along with their associated
ifdef, else, and endif lines.
The ifdef, ifndef, else, and endif lines associated with the symbol,
.IR sym ,
will also be removed.
If an ifdef X occurs nested inside another ifdef X, then the
inside ifdef is treated as if it were an unrecognized symbol.
If the same symbol appears in more than one argument, only the first
occurrence is significant.
.PP
If you use ifdefs to delimit non-C lines, such as comments
or code which is under construction,
then you must tell
.I unifdef
which symbols are used for that purpose so that it won't try to parse
for quotes and comments
in those ifdef'ed lines.
.PP
The 
.PN unifdef
command copies its output to stdout
and will take its input from stdin if no
.I file
argument is given.
.SH Options
.IP \-c 10
Causes the operation of
.PN unifdef
to be complemented.
The lines that would have been removed or blanked
are retained and vice versa.
.IP "\-id\fIsym\fP"
Specifies that you want the lines inside certain ifdefs to be ignored,
but copied out.
.IP "\-iu\fIsym\fP"
Specifies that you want the lines inside certain ifdefs to be ignored,
but copied out.
.IP \-l
Causes
.PN unifdef
to replace removed lines with blank lines instead of deleting them.
.IP \-t
Makes
.PN unifdef
refrain from attempting to recognize comments and 
single and double quotes.
This option is for use on 
plain text (not C code).
.IP "\-D\fIsym\fP"
Specifies which symbols you want defined
and the lines inside those ifdefs will be copied 
to the output.
.IP "\-U\fIsym\fP"
Specifies which symbols you want undefined
and the lines inside those ifdefs will be removed.
.SH Restrictions
Does not know how to deal with \fIcpp\fP constructs such as
.br
.sp
.nf
	#if	defined(X) || defined(Y)
.fi
.SH Diagnostics
Premature EOF, inappropriate else or endif.
.PP
Exit status is 0 if output is exact copy of 
input, 1 if not, 2 if trouble.
.SH See Also
diff(1)
