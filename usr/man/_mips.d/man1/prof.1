.TH prof 1 RISC
.SH Name
prof \- analyze profile data
.SH Syntax
.B prof
[ 
.I options 
] [ 
.I prog_name 
] [ 
.I pcsampling_data_file ... 
]
.br
.B prof \-pixie
[ 
.B \-note 
.I comment_string
]
[
.I options
] 
[
.I prog_name 
[
.I bbaddrs_file 
[
.I bbcounts_file ... 
] ] ]
.SH Description
.NXR "prof command"
.NXR "profile data" "analyzing"
The 
.PN prof
command analyzes one or more data files generated by the compiler's
execution-profiling system and produces a listing. Prof can also combine
those data files or produce a feedback file that lets the optimizer
take into account the program's runtime behavior during a subsequent
compilation.  Profiling is a three-step process: first compile the
program, then execute it, and finally run
.PN prof
to analyze the data.
.PP
The compiler system provides two kinds of profiling:
.RS 5
.TP
1.
.I pc-sampling
interrupts the program periodically, recording the value of the program
counter.
.TP
2.
.I basic-block counting
divides the program into blocks delimited by labels, jump instructions,
and branch instructions. It counts the number of times each block
executes. This provides more detailed (line by line) information than
pc-sampling.
.RE
.SH Using Pc-sampling
To use pc-sampling, compile your program with the option 
.B \-p
(strictly speaking, it is sufficient to use this option only when
linking the program.) Then run the program, which allocates extra
memory to hold the profile data, and (provided the program terminates
normally or calls
.MS exit 2 )
records the data in a file at the end of execution.
.PP
The environment variable PROFDIR determines the name of the pc-sampling
data file and determines whether pc-sampling takes place:  if it is not
set, the pc-sampling data file is named 
.B mon.out ;
if it is set to 
the empty string, no profiling occurs; if it is set to a 
non-empty string, the file is
named 
.I string/pid.progname,
where 
.I pid
is the process id of the
executing program and 
.I progname 
is the program's name, as it appears
in argv[0]. The subdirectory 
.I string 
must already exist.
.PP
After running your program, use
.PN prof
to analyze the pc-sampling data file.
.PP
For example:
.PP
.EX
	cc -c myprog.c
	cc -p -o myprog myprog.o
	myprog				(generates "mon.out")
	prof myprog mon.out
.EE
.PP
When you use
.PN prof
for pc-sampling, the program name defaults to
.B a.out
and the pc-sampling data file name defaults to
.B mon.out ;
if you specify more than one pc-sampling data file,
.PN prof
reports the sum of the data.
.SH Using Basic-block Counting
To use basic-block counting, compile your program without the option
.B \-p .
Use
.MS pixie 1
to translate your program into a profiling version and generate a file,
whose name ends in .Addrs, containing block addresses. Then run the
profiling version, which (assuming the program terminates normally or
calls
.MS exit 2 )
will generate a file, whose name ends in .Counts, containing block
counts.  Then use
.PN prof
with the
.B \-pixie
option to analyze the 
.I bbaddrs 
and 
.I bbcounts 
files. Notice that you must
tell
.PN prof
the name of your original program, not the name of the profiling
version.
.PP
For example:
.PP
.EX
	cc -c myprog.c
	cc -o myprog myprog.o
	pixie -o myprog.pixie myprog		(generates "myprog.Addrs")
	myprog.pixie				(generates "myprog.Counts")
	prof -pixie myprog myprog.Addrs myprog.Counts
.EE
.PP
When you use
.PN prof
with the
.B \-pixie
option, the program name defaults to
.B a.out ,
the 
.I bbaddrs 
file name defaults to \fIprogram_name\fR.Addrs, and the
.I bbcounts 
file name defaults to \fIprogram_name\fR.Counts. If you
specify more than one 
.I bbcounts 
file (never specify more than one
.I bbaddrs 
file),
.PN prof
reports the sum of the data.
.B \-note
.I comment_string
If you use this argument, the
.I comment_string
appears near the beginning of the listing as a comment.
.PP
Provided you do not use
.BR \-pixie ,
.PN prof
processes mon.out files produced by earlier versions of the compiler
system using the obsolete
.B \-p2
or
.B \-p3
options.
.SH Options
For each
.PN prof
option, you need type only enough of the name to distinguish it from
the other options (usually the first character is sufficient).  Unless
otherwise noted, each part of the listing operates only on the set of
procedures that results from the combination of the
.B \-exclude
and
.B \-only
options.
.PP
If the options you specify would neither produce a listing nor generate a file,
.PN prof
uses
.B \-procedures
plus
.B \-heavy
by default.
.TP 10
.B \-pixie
Selects pixie mode, as opposed to pc-sampling mode.
.TP
.B \-procedures
Reports time spent per procedure (using data obtained from pc-sampling
or basic-block counting; the listing tells which one).  For basic-block counting,
this option also reports the number of invocations per procedure.
.TP
.B \-heavy
Reports the most heavily used lines in descending order of use (requires
basic-block counting).
.TP
.B \-lines
Like
.B \-heavy ,
but gives the lines in order of occurrence.
.TP
.B \-invocations
For each procedure, reports how many times the procedure was invoked
from each of its possible callers (requires basic-block
counting).  For this listing, the
.B \-exclude
and
.B \-only
options apply to callees, but not to callers.
.TP
.B \-zero
Prints a list of procedures that were never invoked (requires
basic-block counting).
.TP
.B \-testcoverage
Reports all lines that never executed (requires basic-block
counting).
.TP
\fB\-feedback\fI filename\fR
Produces a file with information that the compiler system can use to
decide what parts of the program will benefit most from global
optimization and what parts will benefit most from in-line procedure
substitution (requires basic-block counting). See
.MS cc 1 .
.TP
\fB\-merge\fI filename\fR
Sums the pc-sampling data files (or, in pixie mode, the 
.I bbcounts 
files)
and writes the result into a new file with the specified name. The
.B \-only
and
.B \-exclude
options have no effect on the merged data.
.TP
\fB\-only\fI procedure_name\fR
If you use one or more
.B \-only
options, the profile listing includes only the named procedures, rather
than the entire program. If any option uses an uppercase O for
Only,
.PN prof
uses only the named procedures, rather than the entire program, as the
base upon which it calculates percentages.
.TP
\fB\-exclude\fI procedure_name\fR
If you use one or more
.B \-exclude
options, the profiler omits the specified procedure and its descendents
from the listing. If any option uses an uppercase E for Exclude,
.PN prof
also omits that procedure from the base upon which it calculates
percentages.
.TP
\fB\-clock\fI megahertz\fR
Alters the appropriate parts of the listing to reflect the clock speed
of the CPU. If you do not specify
.I megahertz,
it defaults to 8.0.
.TP
\fB\-quit\fI n\fR
Truncates the
.B \-procedures
and
.B \-heavy
listings. It can truncate after
.I n
lines (if
.I n
is an integer), after the first entry that represents less than
.I n
percent of the total (if
.I n
is followed immediately by a percent character (%)), or after enough 
entries have been printed to account for
.I n
percent of the total (if
.I n
is followed immediately by cum%).  For example:
.EX
\-quit 15
.EE
truncates each part of the listing after 15 lines of text.
.EX 
\-quit 15%
.EE
truncates each part after the first line that represents less 
than 15 percent of the whole.
.EX
\-quit 15cum%
.EE
truncates each part after the line that
brought the cumulative percentage above 15 percent.
.SH Restrictions
The 
.PN prof 
command does not yet take into account interactions among 
floating-point instructions.
.SH Files
.ta \w'libprof1.a   'u
crt0.o	normal startup code
.br
mcrt0.o	startup code for pc-sampling
.br
libprof1.a	library for pc-sampling
.br
mon.out	default pc-sampling data file
.SH See Also
as(1), cc(1), pixie(1), profil(2), monitor(3)  
.br
.I "Guide to Languages and Programming"
