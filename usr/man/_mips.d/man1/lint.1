.TH lint 1 RISC
.SH Name
lint \- a C program checker
.SH Syntax
.B lint
[ option ] ... file ...
.SH Description
The 
.PN lint
command attempts to detect features of the C program files that are
likely to be errors, nonportable, or wasteful.
.NXR "A C program checker" "lint(1)"
It also checks type usage 
more strictly than the compilers.  Among the things that are currently 
detected are unreachable statements, loops not entered at the top,
automatic variables declared and not used, and logical expressions whose 
value is constant.  Moreover, the usage of functions is checked to locate
functions that return values in some places, but not in others,
functions called with varying numbers or types of arguments,
and functions whose values are not used
or whose values are used but none returned.
.PP
Arguments whose names end with
.PN \&.c
are interpreted as C source files.
Arguments whose names end with
.PN \&.ln
interpreted as the result of an earlier invocation of
.PN lint
with either the
.B \-c
or the 
.B \-o
option used.
The
.PN \&.ln
files are analogous to
.PN \&.o
(object) files that are produced by the
.PN cc
command when given a
.PN \&.c
file as input.  Files with other suffixes are warned about and ignored.
.PP
The 
.PN lint
command takes all the
.PN \&.c ,
.PN \&.ln ,
and 
.PN llib-lx.ln
(specified by
.BI \-l x\fR)
files and processes them in their command line order.  By default, the
.PN lint
command appends the standard C
.PN lint
library
.PN (llib-lc.ln)
to the end of the list of files.
However, if the
.B \-p
option is used, the portable C 
.PN lint
library
.PN (llib-port.ln)
is appended instead.
When the
.B \-c
option is not used,
the second pass of
.PN lint
checks this list of files for mutual compatibility.  When the
.B \-c
option is used, the
.PN \&.ln
and the
.PN llib-lx.ln
files are ignored.
.SH Options
Any number of
.PN lint
options may be used, in any order, intermixed with filename arguments.
The following options are used to suppress certain kinds of warning:
.TP 5
.B \-a
Suppress warnings about assignments of long values to variables that are not
long.
.TP 5
.B \-b
Suppress warnings about break statements that cannot be reached.
(Programs produced by 
.PN lex
or
.PN yacc
often result in such warnings).
.TP 5
.B \-h
Do not apply heuristic tests that attempt to intuit bugs, improve
style, and reduce waste.
.TP 5
.B \-u
Suppress warnings about functions and external
variables used and not defined, or defined and not used.
(This option is suitable when running
.PN lint
on a subset of files of a larger program).
.TP 5
.B \-v
Suppress complaints about unused arguments in functions.
.TP 5
.B \-x
Do not report variables referred to by external declarations but never used.
.PP
The following arguments alter the behavior of
.PN lint .
.TP 5
.BI \-l x\^
Include additional
.PN lint
library
.PN llib-lx.ln .
For example, you can include a
.PN lint
version of the Math Library
.PN llib-lm.ln
by inserting
.B \-lm
on the command line.  This argument does not suppress the default use of
.br
.PN llib-lc.ln .
These lint libraries must be in the assumed directory.
This option can be used to reference local
.PN lint
libraries and is useful in the development of multi-file projects.
.TP 5
.B \-n
Do not check compatibility against either the standard or the portable
.PN lint
library.
.TP 5
.B \-p
Attempt to check portability to other dialects
(\s-1IBM\s0 and \s-1GCOS\s0) of C.
Along with stricter checking,
this option causes all non-external names to be truncated
to eight characters and all external names
to be truncated to six characters and one case.
.TP 5
.B \-c
Cause
.PN lint
to produce a
.PN \&.ln
file for every
.PN \&.c
file on the command line. The
.PN \&.ln
files are the product of the
.PN lint 
command's first pass only, and are not checked for inter-function compatibility.
.TP 5
.BR \-o " lib"
Cause
.PN lint
to create a lint library with the name
.PN llib-llib.ln .
The
.B \-c
option nullifies any use of the
.B \-o
option.
The
.PN lint
library produced is the input that is given to the second pass
.PN lint . 
The
.B \-o
option simply causes this file to be saved in the named
.PN lint
library.  To produce a
.PN llib-llib.ln
without extraneous messages, use of the
.B \-x
option is suggested.  The
.B \-v
option is useful if the source files for the
.PN lint
library are just external interfaces (for example, the way the file
.PN llib-lc
is written).  These option settings are also available through the
use of
.PN lint
comments which are described later.
.PP
The
.BR \-D ,
.BR \-U ,
and
.B \-I
options of
.PN cpp
and the
.B \-g
and
.B \-O
options of
.PN cc
are also recognized as separate arguments.
The
.BR \-g " and " \-O
options are ignored, but, by recognizing these options, the behavior of
.PN lint 
is closer to that of the
.PN cc
command's second pass.  Other options are warned about and ignored.
The pre-processor symbol lint is defined to allow certain questionable code to
be altered or removed for
.PN lint .
Therefore, the symbol lint should be thought of as a reserved word for all code that is planned to be checked by
.PN lint .
.PP
The
.PN lint
command produces its first output on a per-source-file basis.
Warnings regarding included files are collected and printed
after all source files have been processed.
Finally, if the
.B \-c
option is not used, information gathered from all input files is collected
and checked for consistency.  At this point, if it is not clear whether a
warning stems from a given source file or from one of its included files,
the source file name is printed followed by a question mark.
.PP
The behavior of the
.B \-c
and the
.B \-o
options allows for incremental use of
.PN lint
on a set of C source files.  Generally, one invokes
.PN lint
once for each source file with the
.B \-c
option.
Each of these invocations produces a
.PN \&.ln
file which corresponds to the
.PN \&.c
file, and prints all messages that are about just that source file.
After all the source files have been separately run through
.PN lint ,
it is invoked once more (without the
.B \-c
option), listing all the
.PN \&.ln
files with the needed
.BI \-l x
options.  This prints all the inter-file inconsistencies.
This scheme works well with
.PN make ;
it allows
.PN make
to be used to
.PN lint
only the source files that have been modified since
the last time the set of source files were checked by
.PN lint .
.SH Restrictions
The system call
.PN exit ,
the function
.PN longjmp ,
and other functions that do not return a value are not interpreted
correctly by the 
.PN lint
command.  
.PP
Certain conventional comments in the C source change the behavior of
.PN lint :
.TP 18
/\(**\s-1NOTREACHED\s0\(**/
at appropriate points
stops comments about unreachable code.
(This comment is typically placed just after calls to functions like
.PN exit).
.TP 18
.RI /\(**\s-1VARARGS\s+1 n \(**/
suppresses the usual checking for variable numbers of arguments
in the following function declaration.  The data types of the first
.I n\^
arguments are checked;
a missing
.I n\^
is taken to be 0.
.TP 18
/\(**\s-1ARGSUSED\s0\(**/
turns on the
.B \-v
option for the next function.
.TP 18
/\(**\s-1LINTLIBRARY\s0\(**/
at the beginning of a file shuts off complaints about unused functions
and function arguments in this file.  This is equivalent to using the
.BR \-v " and " \-x
options.
.SH Files
.TP 20 
/usr/lib/cmplrs/cc/lint
the directory where the lint libraries specified by the
.BI \-l x
option must exist
.TP
/usr/lib/cmplrs/cc/lint[12]
first and second passes
.TP
/usr/lib/cmplrs/cc/lint/llib-lc.ln
declarations for C Library functions 
(binary format; source is in
.PN /usr/lib/cmplrs/cc/lint/llib-lc )
.TP
/usr/lib/cmplrs/cc/lint/llib-lcV.ln
System V declarations for standard functions
.TP 
/usr/lib/cmplrs/cc/lint/llib-lcP.ln
POSIX declarations for standard functions
.TP
/usr/lib/cmplrs/cc/lint/llib-port.ln
declarations for portable functions 
(binary format; source is in
.PN /usr/lib/cmplrs/cc/lint/llib-port )
.TP
/usr/lib/cmplrs/cc/lint/llib-lm.ln
declarations for Math Library functions 
(binary format; source is in
.PN /usr/lib/cmplrs/cc/lint/llib-lm )
.TP
/usr/tmp/\(**lint\(**
temporaries
.SH See Also
cc(1), cpp(1), make(1)
