.\" SCCSID: @(#)shmget.2	8.1	9/11/90
.TH shmget 2
.SH Name
shmget \- get shared memory segment
.SH Syntax
.nf
.ft B
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
.PP
.ft B
int shmget (key, size, shmflg)
key_t key;
int size, shmflg;
.fi
.SH Description
.NXR "shmget system call"
.NXA "shmget system call" "ftok subroutine"
.NXA "shmget system call" "shmctl system call"
.NXA "shmget system call" "shmop system call"
.NXR "shared memory" "getting"
The
.PN shmget
system call
returns the shared memory identifier associated with
.I key.
.sp
A shared memory identifier and associated data
structure and shared memory
segment of size
.I size
bytes 
are created for
.IR key ,
if one of the following is true:
.RS 5
.PP
The
.I key
is equal to IPC_PRIVATE.
For further information, see 
.MS intro 2 .
.PP
The
.I key
does not already have a shared memory
identifier associated with it, and 
.RI ( shmflg
& IPC_CREAT ) is true.
.RE
.PP
Upon creation, the data structure associated with the new shared memory
identifier is initialized as follows:
.RS 5
.PP
The
.PN shm_perm.cuid , 
.PN shm_perm.uid , 
.PN shm_perm.cgid ,
and
.PN shm_perm.gid
are set equal to the effective user ID
and effective group ID of
the calling process.
.PP
The low-order nine bits of 
.PN shm_perm.mode
are set equal to the low-order nine bits of
.IR shmflg .
The
.PN shm_segsz 
is set equal to the value of
.IR size .
.PP
The
.PN shm_lpid , 
.PN shm_nattch , 
.PN shm_atime ,
and
.PN shm_dtime
are set equal to zero (0).
The
.B shm_ctime
is set equal to the current time.
.RE
.SH Return Values
Upon successful completion,
a non-negative integer, namely, a shared memory
identifier is returned.  Otherwise, a value of \-1 is returned and
.I errno
is set to indicated the error.
.SH Diagnostics
.NXR "shmget system call" "diagnostics"
The
.PN shmget
system call
fails if any of the following is true:
.TP 15
[EINVAL]
The
.I size
is less than the system-imposed minimum
or greater than the system-imposed maximum. 
.TP 15
[EACCES]
A shared memory identifier exists for 
.IR key ,
but operations permission,
as specified by the low-order nine bits of 
.IR shmflg ,
would not be granted. 
For further information, see 
.MS errno 2 .
.TP 15
[EINVAL]
A shared memory identifier exists for
.IR key ,
but the size of the segment associated with it is less than
.I size
and
.I size
is not equal to zero. 
.TP 15
[ENOENT]
A shared memory identifier does not exist for
.IR key ,
and
.RI ( shmflg
& IPC_CREAT )
is false. 
.TP 15
[ENOSPC]
A shared memory identifier is to be
created, but the system-imposed limit on the
maximum number of allowed shared memory
identifiers would be exceeded. 
.TP 15
[ENOMEM]
A shared memory identifier and
the associated shared memory segment are to be
created, but the amount of available
physical memory is not sufficient to fill
the request. 
.TP 15
[EEXIST]
A shared memory identifier exists for 
.IR key ,
but 
.RI (( shmflg
& IPC_CREAT )
and 
.RI ( shmflg
& IPC_EXCL ))
is true. 
.SH See Also
shmctl(2), shmop(2), ftok(3)
