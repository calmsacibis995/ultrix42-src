.\" SCCSID: @(#)mkdir.2	4.1	12/9/88
.TH mkdir 2
.SH Name
mkdir \- make a directory file
.SH Syntax
.nf
.B #include <sys/types.h>
.B #include <sys/stat.h>
.PP
.B mkdir(\fIpath, mode\fP)
.B char *\fIpath\fP;
.B mode_t \fImode\fP;
.fi
.SH Description
.NXR "mkdir system call"
.NXR "directory" "creating"
The 
.PN mkdir
system call creates a new directory file with name
.IR path .
The mode of the new file
is initialized from
.IR mode .
The protection part of the mode
is modified by the process's mode mask.  For further information, see
.MS umask 2 .
.PP
The directory's owner ID is set to the process's effective user ID.
The directory's group ID is set to that of the parent directory in
which it is created.
.PP
The low-order 9 bits of mode are modified by the process's
file mode creation mask: all bits set in the process's file mode
creation mask are cleared.  For further information, see
.MS umask 2.
.SH Return Values
A 0 return value indicates success.  A \-1 return value
indicates an error, and an error code is stored in
.I errno.
.SH Diagnostics
The
.PN mkdir
system call fails and a directory is not created if the following
occurs:
.TP 12
[EISDIR]
The named file is a directory, and the arguments specify it is
to be opened for writing.
.TP
[ENOTDIR]
A component of the path prefix is not a directory.
.TP
[ENAMETOOLONG]
A component of a pathname exceeded 255 characters, or an
entire pathname exceeded 1023 characters.
.TP
[ENOENT]
A component of the path prefix does not exist or the path
argument points to an empty string and the environment
defined is POSIX or SYSTEM_FIVE.
.TP
[EACCES]
Search permission is denied for a component of the path prefix,
or write permission is denied on the parent directory to be created.
.TP
[EROFS]
The named file resides on a read-only file system.
.TP
[EEXIST]
The named file exists.
.TP
[EFAULT]
The
.I path
points outside the process's allocated address space.
.TP
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
.TP
[EIO]
An I/O error occurred while reading from or writing to the file system.
.TP
[EIO]
An I/O error occurred while making the directory entry or
allocating the inode.
.TP
[ENOSPC]
The directory in which the entry for the new directory is being placed
cannot be extended, because there is no space left on the file
system containing the directory.
.TP
[ENOSPC]
The new directory cannot be created, because there is no space left
on the file system that will contain the directory.
.TP
[ENOSPC]
There are no free inodes on the file system on which the
directory is being created.
.TP
[EDQUOT]
The directory in which the entry for the new directory
is being placed cannot be extended, because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.TP
[EDQUOT]
The new directory cannot be created, because the user's
quota of disk blocks on the file system that will contain
the directory has been exhausted.
.TP
[EDQUOT]
The user's quota of inodes on the file system on which the
directory is being created has been exhausted.
.TP
[ESTALE]
The file handle given in the argument is invalid.  The
file referred to by that file handle no longer exists 
or has been revoked.
.TP
[ETIMEDOUT]
A "connect" request or remote file operation failed
because the connected party
did not properly respond after a period
of time that is dependent on the communications protocol.
.TP
[EMLINK]
The link count of the parent directory would exceed {LINK_MAX}.
.SH See Also
chmod(2), stat(2), umask(2)
