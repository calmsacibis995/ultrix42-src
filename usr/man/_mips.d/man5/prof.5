.TH prof 5 RISC
.SH Name
prof \- profile within a function
.SH Syntax
.PP
.B #define \s-1MARK\s+1
.br
.B #include <prof.h>
.PP
.B void \s-1MARK\s+1 (name)
.SH Description
The symbol
.PN MARK
produces a mark called 
.I name
that is treated
the same as a function entry point. 
Execution of the
mark increments the counter for that mark, and the
program-counter time spent is accounted to the
preceding mark or to the function if a preceding mark is not
within the active function.
.PP
The 
.I name
argument
can be any combination of numbers or 
underscores.
Each 
.I name
in a single compilation must be unique, but can be the same as
any ordinary program symbol.
.PP
For marks to be effective, the symbol
.PN MARK
must be defined before the header file 
.PN <prof.h>
is included.
This may be defined by a 
preprocessor directive as in the synopsis, or by a command
line argument.  For example:
.EX
cc \-p \-\s-1DMARK\s+1 foo.c
.EE
If
.PN MARK 
is not defined, the 
.PN MARK(name)
statements may remain in the source files, but they will be ignored.
.SH Examples
In the following example, marks
are used to determine how much time is spent in each loop.
Unless the example is compiled with 
.PN MARK
defined on the command line, the marks are ignored:
.EX
#include <prof.h>
foo( )
{
	int i, j;
	.
	.
	.
	\s-1MARK\s+1(loop1);
	for (i = 0; i < 2000; i++) {
		. . .
	}
	\s-1MARK\s+1(loop2);
	for (j = 0; j < 2000; j++) {
		. . .
	}
}
.EE
.SH See Also
prof(1), profil(2), monitor(3c)
