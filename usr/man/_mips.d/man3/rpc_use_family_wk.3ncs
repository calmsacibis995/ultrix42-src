.TH rpc_use_family_wk 3ncs
.SH Name
rpc_use_family_wk \- create a socket with a well-known port for a
remote procedure call (RPC) server (server only)
.SH Syntax
#include <idl/c/rpc.h>

void rpc_$use_family_wk(\fIfamily, ifspec, sockaddr, slength, status\fP)
.nf
unsigned long \fIfamily\fP;
rpc_$if_spec_t *\fIifspec\fP;
socket_$addr_t *\fIsockaddr\fP;
unsigned long *\fIslength\fP;
status_$t *\fIstatus\fP;
.fi
.\".SH SYNOPSIS (PASCAL)
.\".DS
.\"\fB%include '/usr/include/idl/pas/rpc.ins.pas'\fR
.\"
.\"\fBprocedure rpc_$use_family_wk(\fR
.\"	\fBin \fIfamily\fB: unsigned32;\fR
.\"	\fBin \fIifspec\fB: rpc_$if_spec_t;\fR
.\"	\fBout \fIsockaddr\fB: socket_$addr_t;\fR
.\"	\fBout \fIslength\fB: unsigned32;\fR
.\"	\fBout \fIstatus\fB: status_$t);\fR
.\".DE
.SH Arguments
.TP 15
\fIfamily\fR
The address family of the socket to be created.
This value corresponds to the communications protocol used to access the socket
and determines how the sockaddr is expressed.  The value must be one of
.B socket_$unspec
or 
.B socket_$internet.
.TP 15
\fIifspec\fR
The interface that will be registered by the server.
Typically, this parameter is the interface
.I if_spec
generated by the NIDL compiler from the interface definition;
the well-known port is specified as an interface attribute.
.TP 15
\fIsockaddr\fR
The socket address 
of the socket on which the server will listen.
.TP 15
\fIslength\fR
The length, in bytes, of \fIsockaddr\fR.
.TP 15
\fIstatus\fR
The completion status.
If the completion status returned in
.PN status\&.all
is equal to
.B status_$ok ,
then the routine that supplied it was successful.
.SH Description
The 
.PN rpc_$use_family_wk
routine creates a socket
that uses the port specified through the 
\fIif_spec\fR parameter.
Use this routine to create a socket only if
a server must listen on a particular well-known port.
Otherwise, use 
.PN rpc_$use_family .
.NXR "Interface to the Remote Procedure Call" "rpc_use_famiyl_wk"
.PP
A server listens on one socket per address family,
regardless of how many interfaces that it exports.
Therefore, servers that use well-known ports should make this call
once per supported address family.
.SH Examples
The following statement creates
the well-known socket identified by 
.PN sockaddr
for an array processor server:
.EX
rpc_$use_family_wk (socket_$internet, &matrix$if_spec,
                       &sockaddr, &slen, &status);
.EE
.SH Diagnostics
This section lists status codes for errors returned by this
.PN rpc_$
routine in
.PN status\&.all .
.TP 20
\fBrpc_$cant_create_sock\fR
The RPC runtime library was unable to create a socket.
.TP 20
\fBrpc_$not_in_call\fR
An internal error.
.TP 20
\fBrpc_$proto_error\fR
An internal protocol error.
.TP 20
\fBrpc_$too_many_sockets\fR
The server is trying to use more than the maximum number of sockets that is allowed;
it has called 
.PN rpc_$use_family
or 
.PN rpc_$use_family_wk
too many times.
.TP 20
\fBrpc_$bad_pkt\fR
The server or client has received an ill-formed packet.
.TP 20
\fBrpc_$addr_in_use\fR
The address and port specified in an 
.PN rpc_$use_family_wk
routine are already in use.
This is caused by multiple calls to 
.PN rpc_$use_family_wk
with the same well-known port.
.SH Files
.PN /usr/include/idl/c/rpc.h
.br
.PN /usr/include/idl/rpc.idl
.SH See Also
intro(3ncs), rpc_use_family(3ncs)
