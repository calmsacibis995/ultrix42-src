.\" SCCSID: @(#)nice.3	8.4	1/30/91
.TH nice 3
.SH Name
nice \- set program priority
.SH Syntax
.B int nice(incr)
.br
.B int incr;
.SH Description
.NXR "nice subroutine"
.NXR "priority" "setting"
The scheduling
priority of the process is augmented by
.IR incr .
Positive priorities get less
service than normal.
Priority 10 is recommended to users
who wish to execute long-running programs
without flack from the administration.
.PP
Negative increments are ignored except on behalf of 
the super-user.
The priority is limited to the range
\-20 (most urgent) to 20 (least).
.PP
The priority of a process is
passed to a child process by 
.MS fork 2 .
For a privileged process to return to normal priority
from an unknown state,
.PN nice
should be called successively with arguments
\-40 (goes to priority \-20 because of truncation),
20 (to get to 0),
then 0 (to maintain compatibility with previous versions
of this call).
.SH Environment
In any mode, nice returns -1 and sets 
.PN errno
on an error.  
On success, the return value depends on the mode in which your
program was compiled.  In POSIX or System V mode, it is the new
priority; otherwise, it is zero.  Note that, in POSIX and
System V mode, -1 can indicate either success or failure;
.PN errno
must be used to determine which.
.SH See Also
nice(1), fork(2), setpriority(2), renice(8)
