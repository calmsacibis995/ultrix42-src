.\" SCCSID: @(#)curses.3x	8.1	9/11/90
.TH curses 3x
.SH Name
curses \- screen functions with optimal cursor motion
.SH Syntax
.B cc
[ flags ] files
.B \-lcurses \-ltermcap
[ libraries ]
.SH Description
.NXR "curses package"
.NXR "screen" "updating"
.NXR "terminal" "updating screen"
.NXR "cursor" "optimizing movement"
These routines give the user a method of updating screens with reasonable
optimization.  They keep an image of the current screen,
and the user sets up an image of a new one.  Then the 
.PN refresh
subroutine tells the routines to make the current screen look like the new one.
To initialize the routines, the routine
.PN initscr
must be called before any
of the other routines that deal with windows and
screens are used.  The routine
.PN endwin
should be called before exiting.
.SH Functions
.NXR "curses package" "subroutine list"
.NXR "addch subroutine" 
.NXR "addstr subroutine"
.NXR "box subroutine"
.NXR "crmode subroutine"
.NXR "clear subroutine"
.NXR "clearok subroutine"
.NXR "clrtobot subroutine"
.NXR "clrtoeol subroutine"
.NXR "delch subroutine"
.NXR "deleteln subroutine"
.NXR "delwin subroutine"
.NXR "echo subroutine"
.NXR "endwin subroutine"
.NXR "erase subroutine (curses)"
.NXR "getch subroutine"
.NXR "getcap subroutine"
.NXR "getstr subroutine"
.NXR "gettmode subroutine"
.NXR "getyx subroutine"
.NXR "inch subroutine"
.NXR "initscr subroutine"
.NXR "insch subroutine"
.NXR "insertln subroutine"
.NXR "leaveok subroutine"
.NXR "longname subroutine"
.NXR "move subroutine (curses)"
.NXR "mvcur subroutine"
.NXR "newwin subroutine"
.NXR "nl subroutine"
.NXR "nocrmode subroutine"
.NXR "noecho subroutine"
.nf
.ds w \fIwin\fR
.ds s \fIstdscr\fR
.ta 3i
addch(ch)	add a character to \*s
addstr(str)	add a string to \*s
box(win,vert,hor)	draw a box around a window
clear()	clear \*s
clearok(scr,boolf)	set clear flag for \fIscr\fR
clrtobot()	clear to bottom on \*s
clrtoeol()	clear to end of line on \*s
crmode()	set cbreak mode
delch()	delete a character
deleteln()	delete a line
delwin(win)	delete \*w
echo()	set echo mode
endwin()	end window modes
erase()	erase \*s
getch()	get a char through \*s
getcap(name)	get terminal capability \fIname\fR
getstr(str)	get a string through \*s
gettmode()	get tty modes
getyx(win,y,x)	get (y,x) co-ordinates
inch()	get char at current (y,x) co-ordinates
initscr()	initialize screens
insch(c)	insert a char
insertln()	insert a line
leaveok(win,boolf)	set leave flag for \*w
longname(termbuf,name)	get long name from \fItermbuf\fR
move(y,x)	move to (y,x) on \*s
mvcur(lasty,lastx,newy,newx)	actually move cursor
newwin(lines,cols,begin_y,begin_x)\ 	create a new window
nl()	set newline mapping
nocrmode()	unset cbreak mode
noecho()	unset echo mode
.NXR "nonl subroutine"
.NXR "noraw subroutine"
.NXR "overlay subroutine"
.NXR "overwrite subroutine"
.NXR "printw subroutine"
.NXR "raw subroutine"
.NXR "refresh subroutine"
.NXR "resetty subroutine"
.NXR "savetty subroutine"
.NXR "scanw subroutine"
.NXR "scroll subroutine"
.NXR "scrollok subroutine"
.NXR "setterm subroutine"
.NXR "standend subroutine"
.NXR "standout subroutine"
.NXR "subwin subroutine"
.NXR "touchwin subroutine"
.NXR "unctrl subroutine"
.NXR "waddch subroutine"
.NXR "waddstr subroutine"
.NXR "wclear subroutine"
.NXR "wclrtobot subroutine"
.NXR "wclrtoeol subroutine"
.NXR "wdelch subroutine"
.NXR "wdeleteln subroutine"
.NXR "werase subroutine"
.NXR "wgetch subroutine"
.NXR "wgetstr subroutine"
.NXR "winch subroutine"
.NXR "winsch subroutine"
.NXR "winsertln subroutine"
.NXR "wmove subroutine"
.NXR "wprintw subroutine"
.NXR "wrefresh subroutine"
.NXR "wscanw subroutine"
.NXR "wstandend subroutine"
.NXR "wstandout subroutine"
nonl()	unset newline mapping
noraw()	unset raw mode
overlay(win1,win2)	overlay win1 on win2
overwrite(win1,win2)	overwrite win1 on top of win2
printw(fmt,arg1,arg2,...)	printf on \*s
raw()	set raw mode
refresh()	make current screen look like \*s
resetty()	reset tty flags to stored value
savetty()	stored current tty flags
scanw(fmt,arg1,arg2,...)	scanf through \*s
scroll(win)	scroll \*w one line
scrollok(win,boolf)	set scroll flag
setterm(name)	set term variables for name
standend()	end standout mode
standout()	start standout mode
subwin(win,lines,cols,begin_y,begin_x)\ 	create a subwindow
touchwin(win)	\*(lqchange\*(rq all of \*w
unctrl(ch)	printable version of \fIch\fR
waddch(win,ch)	add char to \*w
waddstr(win,str)	add string to \*w
wclear(win)	clear \*w
wclrtobot(win)	clear to bottom of \*w
wclrtoeol(win)	clear to end of line on \*w
wdelch(win,c)	delete char from \*w
wdeleteln(win)	delete line from \*w
werase(win)	erase \*w
wgetch(win)	get a char through \*w
wgetstr(win,str)	get a string through \*w
winch(win)	get char at current (y,x) in \*w
winsch(win,c)	insert char into \*w
winsertln(win)	insert line into \*w
wmove(win,y,x)	set current (y,x) co-ordinates on \*w
wprintw(win,fmt,arg1,arg2,...)\ 	printf on \*w
wrefresh(win)	make screen look like \*w
wscanw(win,fmt,arg1,arg2,...)\ 	scanf through \*w
wstandend(win)	end standout mode on \*w
wstandout(win)	start standout mode on \*w
.SH See Also
ioctl(2), getenv(3), termcap(3x), tty(4), termcap(5)
.br
.I Screen Updating and Cursor Movement Optimization: 
A Library Package,
.I ULTRIX Supplementary Documents
Vol. II:Programmer
