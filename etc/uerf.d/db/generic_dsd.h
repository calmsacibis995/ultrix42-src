/*  sccsid  =  @(#)generic_dsd.h	4.1   (ULTRIX)   7/2/90  */
/*
**	.title Generic DSD definitions
**	.ident / 1.14 /
**
**
**	  File:	generic_dsd.h
** Description:	Generic DSD definitions
**	Author:	nil nil
**	  Date:	8-Oct-1986
**
**
**	Copyright 1986, Digital Equipment Corporation
**
**
**++
**	These definitions were generated by the DSD Editor / Compiler
**--
*/



#define GENERIC_DSD_FILE_FORMAT 2

/* Data type:  codes */
#define DT_SHORT        1	/* A two byte signed integer */
#define DT_LONG         2	/* A four byte signed integer */
#define DT_STRING       3	/* A pointer to an ASCIZ array of characters */
#define DT_SHORT_INDEX  4	/* A two byte coded field */
#define DT_INDEXED      5	/* A four byte coded field */
#define DT_SHORT_REGISTER   6	/* A two byte field which contains sub-fields */
#define DT_REGISTER     7	/* A four byte field which contains sub-fields */
#define DT_DATE         8	/* A four byte date/time value */
#define DT_BYTE_VECTOR  9	/* An in-line, fixed-length, series of bytes */
#define DT_COUNTED_SHORT_VECTOR 10	/* An in-line, partly filled, fixed-length,
	series of short integers.  The first short integer is a fill count. */
#define DT_COUNTED_LONG_VECTOR  11	/* An in-line, partly filled, fixed-length,
	series of long integers.  The first long integer is a fill count. */
#define DT_ADDR_CNT_VECTOR  12	/* An in-line, partly filled, fixed-length,
	series of long integers (e.g. A stack).  The first long integer is
	a memory address.  The second long integer is a fill count. */
#define DT_TINY         13	/* A single byte signed integer */
#define DT_TINY_INDEX   14	/* A one byte coded field */
#define DT_ASCIZ        15	/* A max-length in-line `nul' terminated string */
#define DT_BIT_VECTOR   16	/* An in-line, fixed-length, series of bits */
#define DT_SHORT_VECTOR     17	/* An in-line, fixed-length, series of short integers */
#define DT_LONG_VECTOR  18	/* An in-line, fixed-length, series of long integers */
#define DT_VMS_TIME     19	/* VMS 64-bit time */

/* Data class:  codes */
#define DC_INTEGER      1	/*  */
#define DC_FLOAT        2	/*  */
#define DC_CODED        3	/*  */
#define DC_CHARACTER    4	/*  */
#define DC_TIME         5	/*  */
#define DC_COMPOSITE    6	/* Data element with sub-fields, of differing data_classes */
#define DC_FILLER       7	/* Used only with bit fields */
#define DC_BYTES        8	/* Used for unusual length non-character data. */
#define DC_BITS         9	/* Used for non-register data that is not on a byte boundary. */

/* Display format codes */
#define DF_DEFAULT      1	/* Default display format for each data-class */
#define DF_DECIMAL      2	/* Integer */
#define DF_HEX          3	/* Integer */
#define DF_OCTAL        4	/* Integer */
#define DF_DATE_TIME    5	/* Time */
#define DF_E_TIME       6	/* Time */
#define DF_HEX_DUMP     7	/* Vector */

/* Validity flag codes */
#define DD$N_V$N_A      0	/* Source data not valid and not available */
#define DD$N_V          1	/* Source data not valid, but available */
#define DD$N_A          2	/* Source data not available */
#define DD$VALID        3	/* Source data is valid */

/* Miscellaneous definitions */

typedef unsigned char DD$BYTE;	/* Single byte values */

#ifndef TRUE
#define TRUE   (1 == 1)
#endif

#ifndef FALSE
#define FALSE  (0 == 1)
#endif

/* DSD access function completion codes */

#define DD$SUCCESS	   TRUE
#define DD$NO_BIN_FILE	   FALSE
#define DD$BAD_BIN_FILE	   FALSE
#define DD$WRONG_BIN_FILE  FALSE
#define DD$NO_MEMORY	   FALSE
#define DD$NO_ITEM	   FALSE
#define DD$UNKNOWN_ITEM    FALSE
#define DD$UNKNOWN_CODE    FALSE
#define DD$UNKNOWN_SEGMENT FALSE
#define DD$END_OF_SEGMENT  FALSE
#define DD$UNKNOWN_RECORD  FALSE
#define DD$NOT_A_REGISTER  FALSE
#define DD$END_OF_REGISTER FALSE
#define DD$NO_TRANSLATION  FALSE

/*  IDs for item types in real bin file */

#define DD$BIN_FILE_VER_ID              90
#define DD$OS_CODES_ID			91
#define DD$OS_ITEMS_ID			92
#define DD$STD_CODES_ID			93
#define DD$STD_REGS_ID			94
#define DD$STD_ITEMS_ID			95
#define DD$STD_SEG_ITEMS_ID		96
#define DD$STD_SEGS_ID			97
#define DD$DSP_LABELS_ID		98
#define DD$STRINGS_ID			99


/* End of generic_dsd.h */
